---
interface Props {
  bootText?: string;
  typingDelay?: number;
  sessionKey?: string;
  minTypingSpeed?: number;
  maxTypingSpeed?: number;
  lineDelay?: number;
}

const { 
  bootText = "Loading GRUB...\nProxmox Virtual Environment Boot Loader\nStarting system initialization...\nDetecting hardware...\nLoading kernel modules...\nStarting system services...\nProxmox VE 8.0.4 initialized\nWelcome to Proxmox Virtual Environment!",
  typingDelay = 1000,
  sessionKey = "bootloader-displayed",
  minTypingSpeed = 1,
  maxTypingSpeed = 1,
  lineDelay = 3
} = Astro.props;
---

<script define:vars={{ bootText, typingDelay, sessionKey, minTypingSpeed, maxTypingSpeed, lineDelay }}>
  document.addEventListener('DOMContentLoaded', () => {
    const bootLoaderContainer = document.getElementById('bootloader-container');
    const bootTextElement = document.getElementById('boot-text');
    const cursorElement = document.getElementById('cursor');
    
    if (!bootTextElement || !cursorElement || !bootLoaderContainer) return;
    
    const hasDisplayed = sessionStorage.getItem(sessionKey);
    
    if (hasDisplayed) {
      bootLoaderContainer.style.display = 'none';
      document.body.style.overflow = 'auto';
      const event = new CustomEvent('bootloader-skipped');
      document.dispatchEvent(event);
      return;
    }
    
    const bootTextAttribute = bootTextElement.getAttribute('data-text');
    if (!bootTextAttribute) return;
    
    const bootLines = bootTextAttribute.split('\n');
    
    let lineIndex = 0;
    let charIndex = 0;
    let currentText = '';
    
    document.body.style.overflow = 'hidden';
    bootLoaderContainer.style.display = 'flex';
    bootTextElement.textContent = '';
    
    const typeEffect = () => {
      if (lineIndex < bootLines.length) {
        if (charIndex >= bootLines[lineIndex].length) {
          currentText += '\n';
          bootTextElement.textContent = currentText;
          bootTextElement.scrollTop = bootTextElement.scrollHeight;
          lineIndex++;
          charIndex = 0;
          setTimeout(typeEffect, lineDelay);
          return;
        }
        
        currentText += bootLines[lineIndex].charAt(charIndex);
        bootTextElement.textContent = currentText;
        bootTextElement.scrollTop = bootTextElement.scrollHeight;
        charIndex++;
        
        const randomDelay = Math.floor(Math.random() * (maxTypingSpeed - minTypingSpeed + 1)) + minTypingSpeed;
        setTimeout(typeEffect, randomDelay);
      } else {
        cursorElement.classList.add('blink');
        
        setTimeout(() => {
          bootLoaderContainer.classList.add('fade-out');
          
          setTimeout(() => {
            bootLoaderContainer.style.display = 'none';
            document.body.style.overflow = 'auto';
            sessionStorage.setItem(sessionKey, 'true');
            const event = new CustomEvent('bootloader-complete');
            document.dispatchEvent(event);
          }, 500);
        }, typingDelay);
      }
    };
    
    setTimeout(typeEffect, 300);
  });
</script>

<div id="bootloader-container" class="bootloader-container">
  <div class="bootloader-content">
    <pre id="boot-text" data-text={bootText}></pre>
    <span id="cursor">_</span>
  </div>
</div>

<style>
  .bootloader-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000;
    color: #aef;
    font-family: 'Courier New', monospace;
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    transition: opacity 0.5s ease;
  }
  
  .bootloader-content {
    width: 90%;
    max-width: 800px;
    padding: 1rem;
  }
  
  pre {
    margin: 0;
    white-space: pre-wrap;
    line-height: 1.4;
    font-size: 0.8rem;
    overflow-y: auto;
    max-height: 80vh;
    scroll-behavior: smooth;
    word-break: break-word;
    overflow-wrap: anywhere;
  }
  
  /* スマートフォン向けのレスポンシブデザイン */
  @media (max-width: 768px) {
    .bootloader-content {
      width: 95%;
      padding: 0.5rem;
    }
    
    pre {
      font-size: 0.6rem;
      line-height: 1.3;
      max-height: 85vh;
    }
  }
  
  @media (max-width: 480px) {
    .bootloader-content {
      width: 98%;
      padding: 0.2rem;
    }
    
    pre {
      font-size: 0.55rem;
      line-height: 1.2;
    }
  }
  
  @media (max-width: 360px) {
    .bootloader-content {
      width: 99%;
      padding: 0.1rem;
    }
    
    pre {
      font-size: 0.5rem;
      line-height: 1.1;
    }
  }
  
  #cursor {
    display: inline-block;
    color: #aef;
    font-weight: bold;
  }
  
  .blink {
    animation: blink-animation 1s steps(2, start) infinite;
  }
  
  @keyframes blink-animation {
    to {
      visibility: hidden;
    }
  }
  
  .fade-out {
    opacity: 0;
  }
</style>
